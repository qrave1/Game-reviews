version: '3.8'
services:
  app:
    container_name: gameReview_app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
#    restart: unless-stopped
    depends_on:
      - mysql
      - redis
    networks:
      - gameReview

  nginx:
    container_name: gameReview_nginx
    image: nginx:1.24
    ports:
      - "3000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./web:/var/www/html
    depends_on:
      app:
        condition: service_started
    networks:
      - gameReview

  mysql:
    container_name: gameReview_db
    image: 'mysql:8'
    ports:
      - '3306:3306'
    environment:
      - 'MYSQL_DATABASE=${DB_NAME}'
      - 'MYSQL_USER=${DB_USER}'
      - 'MYSQL_PASSWORD=${DB_PASSWORD}'
      - 'MYSQL_ROOT_PASSWORD=root'
    volumes:
      - 'gameReviewVolume:/var/lib/mysql'
    networks:
      - gameReview

  redis:
    container_name: gameReview_redis
    image: redis:7
    ports:
      - '6379:6379'
    networks:
      - gameReview

volumes:
  gameReviewVolume:

networks:
  gameReview:
    driver: bridge
